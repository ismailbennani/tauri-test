name: 'publish'

on:
  release:
    types: [ published ]

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install NPM packages
        run: npm install

      - name: Set version ${{ github.event.release.tag_name }}
        env: 
          NEXT_VERSION: ${{ github.event.release.tag_name }}
        run: |
          # package.json
          echo "$(jq --arg next_version "${NEXT_VERSION}" '.version=$next_version' package.json)" > package.json
          # tauri.conf.json
          echo "$(jq --arg next_version "${NEXT_VERSION}" '.version=$next_version' src-tauri/tauri.conf.json)" > src-tauri/tauri.conf.json
          # cargo.toml
          cd src-tauri && cargo install cargo-bump && cargo bump ${NEXT_VERSION}

      - name: Build and release application 
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGN_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGN_KEY_PASSWORD }}
        with:
          tagName: ${{ github.event.release.tag_name }}
          args: ${{ matrix.args }}